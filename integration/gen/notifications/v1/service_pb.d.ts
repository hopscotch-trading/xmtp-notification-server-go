// @generated by protoc-gen-es v2.2.5
// @generated from file notifications/v1/service.proto (package notifications.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file notifications/v1/service.proto.
 */
export declare const file_notifications_v1_service: GenFile;

/**
 * An union of possible delibery mechanisms
 *
 * @generated from message notifications.v1.DeliveryMechanism
 */
export declare type DeliveryMechanism = Message<"notifications.v1.DeliveryMechanism"> & {
  /**
   * @generated from oneof notifications.v1.DeliveryMechanism.delivery_mechanism_type
   */
  deliveryMechanismType: {
    /**
     * @generated from field: string apns_device_token = 1;
     */
    value: string;
    case: "apnsDeviceToken";
  } | {
    /**
     * @generated from field: string firebase_device_token = 2;
     */
    value: string;
    case: "firebaseDeviceToken";
  } | {
    /**
     * @generated from field: string custom_token = 3;
     */
    value: string;
    case: "customToken";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message notifications.v1.DeliveryMechanism.
 * Use `create(DeliveryMechanismSchema)` to create a new message.
 */
export declare const DeliveryMechanismSchema: GenMessage<DeliveryMechanism>;

/**
 * A request to register an installation with the service
 *
 * @generated from message notifications.v1.RegisterInstallationRequest
 */
export declare type RegisterInstallationRequest = Message<"notifications.v1.RegisterInstallationRequest"> & {
  /**
   * @generated from field: string installation_id = 1;
   */
  installationId: string;

  /**
   * @generated from field: notifications.v1.DeliveryMechanism delivery_mechanism = 2;
   */
  deliveryMechanism?: DeliveryMechanism;
};

/**
 * Describes the message notifications.v1.RegisterInstallationRequest.
 * Use `create(RegisterInstallationRequestSchema)` to create a new message.
 */
export declare const RegisterInstallationRequestSchema: GenMessage<RegisterInstallationRequest>;

/**
 * Response to RegisterInstallationRequest
 *
 * @generated from message notifications.v1.RegisterInstallationResponse
 */
export declare type RegisterInstallationResponse = Message<"notifications.v1.RegisterInstallationResponse"> & {
  /**
   * @generated from field: string installation_id = 1;
   */
  installationId: string;

  /**
   * @generated from field: uint64 valid_until = 2;
   */
  validUntil: bigint;
};

/**
 * Describes the message notifications.v1.RegisterInstallationResponse.
 * Use `create(RegisterInstallationResponseSchema)` to create a new message.
 */
export declare const RegisterInstallationResponseSchema: GenMessage<RegisterInstallationResponse>;

/**
 * Delete an installation from the service
 *
 * @generated from message notifications.v1.DeleteInstallationRequest
 */
export declare type DeleteInstallationRequest = Message<"notifications.v1.DeleteInstallationRequest"> & {
  /**
   * @generated from field: string installation_id = 1;
   */
  installationId: string;
};

/**
 * Describes the message notifications.v1.DeleteInstallationRequest.
 * Use `create(DeleteInstallationRequestSchema)` to create a new message.
 */
export declare const DeleteInstallationRequestSchema: GenMessage<DeleteInstallationRequest>;

/**
 * A subscription with associated metadata
 *
 * @generated from message notifications.v1.Subscription
 */
export declare type Subscription = Message<"notifications.v1.Subscription"> & {
  /**
   * @generated from field: string topic = 1;
   */
  topic: string;

  /**
   * @generated from field: repeated notifications.v1.Subscription.HmacKey hmac_keys = 2;
   */
  hmacKeys: Subscription_HmacKey[];

  /**
   * @generated from field: bool is_silent = 3;
   */
  isSilent: boolean;
};

/**
 * Describes the message notifications.v1.Subscription.
 * Use `create(SubscriptionSchema)` to create a new message.
 */
export declare const SubscriptionSchema: GenMessage<Subscription>;

/**
 * @generated from message notifications.v1.Subscription.HmacKey
 */
export declare type Subscription_HmacKey = Message<"notifications.v1.Subscription.HmacKey"> & {
  /**
   * @generated from field: uint32 thirty_day_periods_since_epoch = 1;
   */
  thirtyDayPeriodsSinceEpoch: number;

  /**
   * @generated from field: bytes key = 2;
   */
  key: Uint8Array;
};

/**
 * Describes the message notifications.v1.Subscription.HmacKey.
 * Use `create(Subscription_HmacKeySchema)` to create a new message.
 */
export declare const Subscription_HmacKeySchema: GenMessage<Subscription_HmacKey>;

/**
 * A request to subscribe to a list of topics and update the associated metadata
 *
 * @generated from message notifications.v1.SubscribeWithMetadataRequest
 */
export declare type SubscribeWithMetadataRequest = Message<"notifications.v1.SubscribeWithMetadataRequest"> & {
  /**
   * @generated from field: string installation_id = 1;
   */
  installationId: string;

  /**
   * @generated from field: repeated notifications.v1.Subscription subscriptions = 2;
   */
  subscriptions: Subscription[];
};

/**
 * Describes the message notifications.v1.SubscribeWithMetadataRequest.
 * Use `create(SubscribeWithMetadataRequestSchema)` to create a new message.
 */
export declare const SubscribeWithMetadataRequestSchema: GenMessage<SubscribeWithMetadataRequest>;

/**
 * Subscribe to a list of topics
 *
 * @generated from message notifications.v1.SubscribeRequest
 */
export declare type SubscribeRequest = Message<"notifications.v1.SubscribeRequest"> & {
  /**
   * @generated from field: string installation_id = 1;
   */
  installationId: string;

  /**
   * @generated from field: repeated string topics = 2;
   */
  topics: string[];
};

/**
 * Describes the message notifications.v1.SubscribeRequest.
 * Use `create(SubscribeRequestSchema)` to create a new message.
 */
export declare const SubscribeRequestSchema: GenMessage<SubscribeRequest>;

/**
 * Unsubscribe from a list of topics
 *
 * @generated from message notifications.v1.UnsubscribeRequest
 */
export declare type UnsubscribeRequest = Message<"notifications.v1.UnsubscribeRequest"> & {
  /**
   * @generated from field: string installation_id = 1;
   */
  installationId: string;

  /**
   * @generated from field: repeated string topics = 2;
   */
  topics: string[];
};

/**
 * Describes the message notifications.v1.UnsubscribeRequest.
 * Use `create(UnsubscribeRequestSchema)` to create a new message.
 */
export declare const UnsubscribeRequestSchema: GenMessage<UnsubscribeRequest>;

/**
 * @generated from service notifications.v1.Notifications
 */
export declare const Notifications: GenService<{
  /**
   * @generated from rpc notifications.v1.Notifications.RegisterInstallation
   */
  registerInstallation: {
    methodKind: "unary";
    input: typeof RegisterInstallationRequestSchema;
    output: typeof RegisterInstallationResponseSchema;
  },
  /**
   * @generated from rpc notifications.v1.Notifications.DeleteInstallation
   */
  deleteInstallation: {
    methodKind: "unary";
    input: typeof DeleteInstallationRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc notifications.v1.Notifications.Subscribe
   */
  subscribe: {
    methodKind: "unary";
    input: typeof SubscribeRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc notifications.v1.Notifications.SubscribeWithMetadata
   */
  subscribeWithMetadata: {
    methodKind: "unary";
    input: typeof SubscribeWithMetadataRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc notifications.v1.Notifications.Unsubscribe
   */
  unsubscribe: {
    methodKind: "unary";
    input: typeof UnsubscribeRequestSchema;
    output: typeof EmptySchema;
  },
}>;

